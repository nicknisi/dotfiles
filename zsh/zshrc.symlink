export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

command_exists() {
    command -v "$1" > /dev/null 2>&1
}

# display how long all tasks over 10 seconds take
export REPORTTIME=10

[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/code ]]; then
    export CODE_DIR=~/code
fi

# source all .zsh files inside of the zsh/ directory
for config ($ZSH/**/*.zsh) source $config

# initialize autocomplete
autoload -U compinit add-zsh-hook
compinit

for config ($ZSH/**/*completion.sh) source $config

export EDITOR='nvim'
export GIT_EDITOR='nvim'

export PATH=/usr/local/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
elif [[ -d ~/.bin ]]; then
    export PATH=~/.bin:~/.bin:$PATH
fi

if [ -z "$TMUX" ]  && [[ $(uname -s) == "Darwin" ]]; then
    export TERM=xterm-256color-italic
else
    export TERM=xterm-256color tmux
fi

# install rbenv
if command_exists rbenv; then
    eval "$(rbenv init -)"
fi

if [[ -d ~/.rvm ]]; then
    PATH=$HOME/.rvm/bin:$PATH # Add RVM to PATH for scripting
    source ~/.rvm/scripts/rvm
fi

# alias git to hub
if command_exists hub; then
    eval "$(hub alias -s)"
fi

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='ag -g ""'

# source local configuration for zsh
[ -f ~/.local.zsh ] && source ~/.local.zsh
